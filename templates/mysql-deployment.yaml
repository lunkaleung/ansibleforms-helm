apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  name: mysql
  labels:
    app.kubernetes.io/name: mysql
    app.kubernetes.io/instance: mysql
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mysql
        app.kubernetes.io/instance: mysql
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: {{ .Release.Name }}
    spec:
      containers:
        - image: {{ .Values.container.mysql.image }}
          name: mysql
          ports:
            - containerPort: 3306
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secrets
                  key: DB_PASSWORD
          resources:
            limits:
              cpu: {{ .Values.container.mysql.resources.limits.cpu }}
              memory: {{ .Values.container.mysql.resources.limits.memory }}
            requests:
              cpu: {{ .Values.container.mysql.resources.requests.cpu }}
              memory: {{ .Values.container.mysql.resources.requests.memory }}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-persistent-storage
            - name: mysql-my-cnf
              mountPath: /etc/mysql/my.cnf
              subPath: my.cnf
            - name: init-script # init script
              mountPath: /docker-entrypoint-initdb.d
      restartPolicy: Always
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-mysql-pvc
        - name: mysql-my-cnf
          configMap:
            name: mysql-my-cnf
            items:
            - key: my.cnf
              path: my.cnf
        - name: init-script
          configMap:
            name: mysql-init-script